---
// Import necessary image assets for the slideshow
import pic1 from "@assets/ncdmb-1.jpg";
import pic2 from "@assets/ncdmb-2.jpg";
import pic3 from "@assets/ncdmb-3.jpg";
import pic4 from "@assets/ncdmb-4.jpg";
import pic5 from "@assets/ncdmb-5.jpg";
import pic6 from "@assets/ncdmb-6.jpg";
import pic7 from "@assets/ncdmb-7.jpg";
import pic8 from "@assets/ncdmb-8.jpg";
import pic9 from "@assets/ncdmb-9.jpg";
import pic10 from "@assets/ncdmb-10.jpg";
// Import the Picture component from astro:assets for optimized image handling
import { Picture } from "astro:assets";
---

<!-- Main container for the training details and slideshow -->
<div class="grid gap-4">
  <!-- Page Title -->
  <h1 class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter text-black">
    NCDMB ISO 9001-2015 Quality Management System Training
  </h1>
  
  <!-- Slideshow Container -->
  <div class="slideshow-container relative max-w-full">
    <!-- Slides Wrapper: Contains all the individual picture slides -->
    <div class="slides">
      <!-- Each div represents a single slide in the slideshow -->
      <div class="slide">
        <Picture
          src={pic1}
          alt="NCDMB training facility"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="eager"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic2}
          alt="Training session"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic3}
          alt="Participants"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic4}
          alt="Participants"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic5}
          alt="Participants"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic6}
          alt="Participants"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic7}
          alt="Participants"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic8}
          alt="Participants"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic9}
          alt="Participants"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
      <div class="slide">
        <Picture
          src={pic10}
          alt="Participants"
          widths={[200, 400, 600]}
          sizes="(max-width: 800px) 100vw, 620px"
          loading="lazy"
          format="avif"
          class="slide-image"
        />
      </div>
    </div>
    
    <!-- Navigation dots for manual slide control -->
    <div class="dots-container flex justify-center mt-4 gap-2">
      <button class="dot active" data-slide="0"></button>
      <button class="dot" data-slide="1"></button>
      <button class="dot" data-slide="2"></button>
      <button class="dot" data-slide="3"></button>
      <button class="dot" data-slide="4"></button>
      <button class="dot" data-slide="5"></button>
      <button class="dot" data-slide="6"></button>
      <button class="dot" data-slide="7"></button>
      <button class="dot" data-slide="8"></button>
      <button class="dot" data-slide="9"></button>
    </div>
  </div>

  <!-- Training description paragraph -->
  <p class="text-lg mt-4 text-black max-w-fit lg:text-xl">
    A three day (3 day) NCDMB ISO 9001-2015 Quality Management System (QMS) 
    training for 30 nominated youths in Warri (July 7, 2025 - July 9, 2025)
    coducted by Rucotech Integrated Services Nigeria Limited.
  </p>
  
  <!-- "Learn more" link (note: the href attribute was incomplete in the original, adjusted for clarity) -->
  <div class="mt-2 flex flex-col gap-3">
    <a
      href="/trainings/ncdmb-2025"
      class="flex gap-1 max-w-fit items-center justify-start bg-white text-[#2947A9] font-bold"
      rel="noopener">
      Learn more
    </a>
  </div>
</div>

<!-- CSS Styling for the slideshow components -->
<style>
  .slideshow-container {
    position: relative;
    overflow: hidden;
    max-width: 100%;
    margin: 0 auto;
    touch-action: pan-y; /* Allow vertical scrolling but capture horizontal swipes */
    user-select: none; /* Prevent text selection during swipe */
  }
  
  .slides {
    display: flex;
    transition: transform 0.5s ease-in-out; /* Smooth transition for slide changes */
  }
  
  .slide {
    min-width: 100%; /* Each slide takes full width of the container */
    flex-shrink: 0; /* Prevents slides from shrinking */
    aspect-ratio: 16/9; /* Maintains consistent 16:9 aspect ratio */
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa; /* Light background for empty space */
  }
  
  .slide-image {
    width: 100%; /* Image takes full width of its slide */
    height: 100%; /* Image takes full height of its slide */
    object-fit: cover; /* Crops image to fit while maintaining aspect ratio */
    object-position: center; /* Centers the image within the container */
  }
  
  /* Mobile responsive adjustments */
  @media (max-width: 768px) {
    .slide {
      aspect-ratio: 4/3; /* Better aspect ratio for mobile */
    }
  }
  
  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%; /* Makes the dots circular */
    background-color: #bbb; /* Default dot color */
    border: none;
    cursor: pointer;
    transition: background-color 0.3s; /* Smooth transition for dot color change */
  }
  
  .dot.active,
  .dot:hover {
    background-color: #2947A9; /* Active/hover dot color */
  }
</style>

<!-- JavaScript for slideshow functionality -->
<script>
  let currentSlide = 0; // Tracks the currently displayed slide index
  let touchStartX = 0; // Touch start position for mobile swipe
  let touchEndX = 0; // Touch end position for mobile swipe
  let isAutoPlaying = true; // Track if auto-play is active
  let autoPlayInterval: ReturnType<typeof setInterval>; // Store the interval ID
  
  // Get the slides container with proper type assertion
  const slides = document.querySelector('.slides') as HTMLElement; 
  const slidesContainer = document.querySelector('.slideshow-container') as HTMLElement;
  const dots = document.querySelectorAll('.dot') as NodeListOf<HTMLElement>; // All navigation dot buttons
  const totalSlides = dots.length; // Total number of slides

  // Function to display a specific slide with explicit type annotation
  function showSlide(n: number): void { 
    currentSlide = n;
    // Ensure slides is not null before accessing its style property
    if (slides) { 
      slides.style.transform = `translateX(-${currentSlide * 100}%)`;
    }
    
    // Update active class for navigation dots
    dots.forEach((dot, index) => {
      dot.classList.toggle('active', index === currentSlide);
    });
  }

  // Auto-advance slides function
  function startAutoPlay(): void {
    if (isAutoPlaying) {
      autoPlayInterval = setInterval(() => {
        currentSlide = (currentSlide + 1) % totalSlides; // Cycle through slides
        showSlide(currentSlide);
      }, 4000);
    }
  }

  // Stop auto-play function
  function stopAutoPlay(): void {
    clearInterval(autoPlayInterval);
  }

  // Handle touch start for mobile swipe
  function handleTouchStart(e: TouchEvent): void {
    touchStartX = e.changedTouches[0].screenX;
    stopAutoPlay(); // Stop auto-play when user interacts
  }

  // Handle touch move to prevent default scrolling during swipe
  function handleTouchMove(e: TouchEvent): void {
    e.preventDefault(); // Prevent page scrolling during slide swipe
  }

  // Handle touch end for mobile swipe
  function handleTouchEnd(e: TouchEvent): void {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
    // Restart auto-play after 3 seconds of inactivity
    setTimeout(() => {
      startAutoPlay();
    }, 3000);
  }

  // Determine swipe direction and change slide
  function handleSwipe(): void {
    const swipeThreshold = 50; // Minimum swipe distance
    const swipeDistance = touchStartX - touchEndX;
    
    if (Math.abs(swipeDistance) > swipeThreshold) {
      if (swipeDistance > 0) {
        // Swiped left - go to next slide
        currentSlide = (currentSlide + 1) % totalSlides;
      } else {
        // Swiped right - go to previous slide
        currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
      }
      showSlide(currentSlide);
    }
  }

  // Add touch event listeners for mobile swipe functionality
  if (slidesContainer) {
    slidesContainer.addEventListener('touchstart', handleTouchStart, { passive: false });
    slidesContainer.addEventListener('touchmove', handleTouchMove, { passive: false });
    slidesContainer.addEventListener('touchend', handleTouchEnd, { passive: false });
  }

  // Start auto-play on page load
  startAutoPlay();

  // Add click event listeners to navigation dots for manual control
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      stopAutoPlay(); // Stop auto-play when user clicks dot
      showSlide(index);
      // Restart auto-play after 3 seconds
      setTimeout(() => {
        startAutoPlay();
      }, 3000);
    });
  });

  // Pause auto-play when page is not visible
  document.addEventListener('visibilitychange', () => {
    if (document.hidden) {
      stopAutoPlay();
    } else {
      startAutoPlay();
    }
  });
</script>
<!-- End of the NCDMB 2025 training component -->
<!-- This component displays a slideshow of images related to the NCDMB 2025 training,
     along with a brief description and a link to learn more. The slideshow automatically
     cycles through images every 4 seconds, and users can also manually navigate through the slides
     using the navigation dots. The images are optimized for different screen sizes using the Picture component. -->